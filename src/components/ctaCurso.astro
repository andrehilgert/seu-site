---
let { link } = Astro.props
---
<div class="text-center my-4 relative group w-fit mx-auto">
    <div class="absolute -inset-1 bg-gradient-to-r from-green-500 to-teal-600 rounded-lg blur opacity-25 group-hover:opacity-100 transition duration-1000 group-hover:duration-200 animate-pulse"></div>
    <a href={link} class="cta-curso relative btn btn-lg text-white gap-2 w-full md:w-fit bg-gradient-to-r from-green-500 to-green-700 ring-1 ring-green-800/5">
        <slot>Saiba Mais</slot>
        <svg class="w-4 h-4 ml-1" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd" /></svg>
    </a>
</div>
<script define:vars={{link}}>
    //Get the original url, set on the page build
    let url = new URL(link)
    let params = url.searchParams

    const newParams = new URLSearchParams(window.location.search) //get the url params sent on the page visit
    newParams.forEach((value, key) => {params.append(key,value)}) //append this new params on the original ones

    url.search = params.toString()
    let hrefCta = url.toString() //Makes the final url

    // Find all buttons with the `alert` class on the page.
    const buttons = document.querySelectorAll('a.cta-curso');

    // Handle clicks on each button.
    buttons.forEach( button => button.href=hrefCta )

</script>